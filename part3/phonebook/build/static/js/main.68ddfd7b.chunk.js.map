{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","delete","put","Notification","message","className","Filter","text","defaultValue","onChange","value","PersonForm","onSubmit","newName","setNewName","newNumber","setNewNumber","type","Persons","persons","filter","onClick","person","name","toLowerCase","includes","map","key","number","App","useState","setPersons","newFilter","setFilter","errorMessage","setErrorMessage","useEffect","personService","initialPersons","event","target","preventDefault","existingPerson","find","window","confirm","returnedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68ddfd7b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Filter = ({text, defaultValue, onChange}) => (\n  <div>\n    {text} <input value={defaultValue} onChange={onChange} />\n  </div>\n)\n\nconst PersonForm = ({onSubmit, newName, setNewName, newNumber, setNewNumber}) => (\n  <form onSubmit={onSubmit}>\n    <div>\n      name: <input value={newName} onChange={setNewName}/>\n    </div>\n    <div>\n      number: <input value={newNumber} onChange={setNewNumber}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst Persons = ({persons, filter, onClick}) => (\n  <div>\n    {persons\n      .filter(person => person.name.toLowerCase().includes(filter))\n      .map(person => \n        <div key={person.name}>\n          {person.name} {person.number} \n          <button onClick={() => onClick(person.id,person.name)}>delete</button>\n        </div>)}\n  </div>\n)\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setFilter ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n          setPersons(initialPersons)\n        }\n      )\n  }, [])\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n    const existingPerson = persons.find(person => person.name === newName)\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if(existingPerson) {\n      if(existingPerson.number !== newNumber) {\n        if(window.confirm(`${newName} is already added to the phonebook. Replace old number with new one?`)) {\n          personService\n            .update(existingPerson.id, newPerson)\n            .then(returnedPerson => {\n              setPersons(persons.map(person => person.id !== existingPerson.id ? person : returnedPerson))\n              setErrorMessage(\n                `${newName}'s number has been changed`\n              )\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000)\n            })\n            .catch(error => {\n              setErrorMessage(\n                `Information of ${newName} has already been deleted from the server.`\n              )\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000)\n            })\n        }\n      }\n      else {\n        setErrorMessage(\n          `${newName} is already added to the phonebook`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      }\n    }\n    else {\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setErrorMessage(\n            `${newName} added`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const deletePerson = (id, name) => {\n    if(window.confirm(`Delete ${name}?`)) {\n      personService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter text=\"filter shown with\" defaultValue={newFilter} onChange={(event) => setFilter(event.target.value.toLowerCase())}/>\n      <h2>add a new</h2>\n      <PersonForm onSubmit={addNewPerson} \n        newName={newName} setNewName={(event) => setNewName(event.target.value)}\n        newNumber={newNumber} setNewNumber={(event) => setNewNumber(event.target.value)}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={newFilter} onClick={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}